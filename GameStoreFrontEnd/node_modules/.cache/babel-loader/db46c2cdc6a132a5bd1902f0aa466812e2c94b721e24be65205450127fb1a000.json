{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nexport default {\n  data() {\n    return {\n      game: null\n    };\n  },\n  mounted() {\n    const gameId = this.$route.params.id;\n    this.getGame(gameId);\n  },\n  methods: {\n    getGame(gameId) {\n      fetch(`http://localhost:8080/games/${gameId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        this.game = {\n          id: data.id,\n          nome: data.nome,\n          categoria: data.categoria,\n          preco: data.preco,\n          data_de_lancamento: data.data_de_lancamento,\n          description: data.description\n        };\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    async updateGame() {\n      try {\n        const index = this.result.findIndex(game => game.id === gameId);\n        if (index !== -1) {\n          this.result[index] = {\n            ...this.result[index],\n            nome: this.nome,\n            categoria: this.categoria,\n            preco: this.preco,\n            data_de_lancamento: this.data_de_lancamento,\n            description: this.description\n          };\n        }\n        const response = await fetch(`http://localhost:8080/games/${gameId}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: this.nome,\n            categoria: this.categoria,\n            preco: this.preco,\n            data_de_lancamento: this.data_de_lancamento,\n            description: this.description\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        alert('Game updated!');\n        router.push('/games');\n      } catch (error) {\n        alert('Error updating game!');\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","data","game","mounted","gameId","$route","params","id","getGame","methods","fetch","then","response","ok","Error","status","json","nome","categoria","preco","data_de_lancamento","description","catch","error","console","updateGame","index","result","findIndex","method","headers","body","JSON","stringify","alert","push"],"sources":["C:\\Users\\Arthur\\gamestore\\src\\components\\UpdateGame.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Update Game</h2>\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n            <img src=\"...\" class=\"card-img-top\" alt=\"...\">\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{{ game.name }}</h5>\r\n                <p>{{ game.categoria }}</p>\r\n                <p>Pre√ßo: {{ game.preco }}</p>\r\n                <p class=\"card-text\">{{ game.description }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div>\r\n        <form @submit.prevent=\"updatedGame\" class=\"m-5\">\r\n            <h2 class=\"mt-2\">Game Registration</h2>\r\n            <div class=\"form-group\">\r\n                <input id=\"nome\" type=\"text\" v-model=\"nome\" class=\"form-control\" placeholder=\"Game name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"categoria\" type=\"text\" v-model=\"categoria\" class=\"form-control\"\r\n                    placeholder=\"Game category\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"preco\" type=\"number\" step=\".01\" v-model=\"preco\" class=\"form-control\" placeholder=\"0.0\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"data_de_lancamento\" type=\"date\" v-model=\"data_de_lancamento\" class=\"form-control\"\r\n                    placeholder=\"Release Date\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"description\" type=\"text\" v-model=\"description\" class=\"form-control\"\r\n                    placeholder=\"Game description\">\r\n            </div>\r\n            <div class=\"mt-3 mb-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport router from '../router'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            game: null,\r\n        }\r\n    },\r\n    mounted() {\r\n        const gameId = this.$route.params.id\r\n        this.getGame(gameId)\r\n    },\r\n    methods: {\r\n        getGame(gameId) {\r\n\r\n            fetch(`http://localhost:8080/games/${gameId}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! Status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n\r\n                    this.game = {\r\n                        id: data.id,\r\n                        nome: data.nome,\r\n                        categoria: data.categoria,\r\n                        preco: data.preco,\r\n                        data_de_lancamento: data.data_de_lancamento,\r\n                        description: data.description,\r\n                    };\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n        async updateGame() {\r\n            try {\r\n                const index = this.result.findIndex(game => game.id === gameId);\r\n                if (index !== -1) {\r\n                    this.result[index] = {\r\n                        ...this.result[index],\r\n                        nome: this.nome,\r\n                        categoria: this.categoria,\r\n                        preco: this.preco,\r\n                        data_de_lancamento: this.data_de_lancamento,\r\n                        description: this.description\r\n                    };\r\n                }\r\n                const response = await fetch(`http://localhost:8080/games/${gameId}`, {\r\n                    method: 'PATCH',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        nome: this.nome,\r\n                        categoria: this.categoria,\r\n                        preco: this.preco,\r\n                        data_de_lancamento: this.data_de_lancamento,\r\n                        description: this.description\r\n                    })\r\n                });   \r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                alert('Game updated!');    \r\n                router.push('/games');\r\n            } catch (error) {         \r\n                alert('Error updating game!');\r\n                console.error(error);\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n</script>"],"mappings":";AA2CA,OAAOA,MAAK,MAAO,WAAU;AAE7B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;IACV;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC;IACnC,IAAI,CAACC,OAAO,CAACJ,MAAM;EACvB,CAAC;EACDK,OAAO,EAAE;IACLD,OAAOA,CAACJ,MAAM,EAAE;MAEZM,KAAK,CAAE,+BAA8BN,MAAO,EAAC,EACxCO,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;QAC7D;QACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAC1B,CAAC,EACAL,IAAI,CAACV,IAAG,IAAK;QAEV,IAAI,CAACC,IAAG,GAAI;UACRK,EAAE,EAAEN,IAAI,CAACM,EAAE;UACXU,IAAI,EAAEhB,IAAI,CAACgB,IAAI;UACfC,SAAS,EAAEjB,IAAI,CAACiB,SAAS;UACzBC,KAAK,EAAElB,IAAI,CAACkB,KAAK;UACjBC,kBAAkB,EAAEnB,IAAI,CAACmB,kBAAkB;UAC3CC,WAAW,EAAEpB,IAAI,CAACoB;QACtB,CAAC;MACL,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACV,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,SAAS,CAAC1B,IAAG,IAAKA,IAAI,CAACK,EAAC,KAAMH,MAAM,CAAC;QAC/D,IAAIsB,KAAI,KAAM,CAAC,CAAC,EAAE;UACd,IAAI,CAACC,MAAM,CAACD,KAAK,IAAI;YACjB,GAAG,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC;YACrBT,IAAI,EAAE,IAAI,CAACA,IAAI;YACfC,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;YAC3CC,WAAW,EAAE,IAAI,CAACA;UACtB,CAAC;QACL;QACA,MAAMT,QAAO,GAAI,MAAMF,KAAK,CAAE,+BAA8BN,MAAO,EAAC,EAAE;UAClEyB,MAAM,EAAE,OAAO;UACfC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBhB,IAAI,EAAE,IAAI,CAACA,IAAI;YACfC,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;YAC3CC,WAAW,EAAE,IAAI,CAACA;UACtB,CAAC;QACL,CAAC,CAAC;QACF,IAAI,CAACT,QAAQ,CAACC,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;QAC7D;QACAmB,KAAK,CAAC,eAAe,CAAC;QACtBlC,MAAM,CAACmC,IAAI,CAAC,QAAQ,CAAC;MACzB,EAAE,OAAOZ,KAAK,EAAE;QACZW,KAAK,CAAC,sBAAsB,CAAC;QAC7BV,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}