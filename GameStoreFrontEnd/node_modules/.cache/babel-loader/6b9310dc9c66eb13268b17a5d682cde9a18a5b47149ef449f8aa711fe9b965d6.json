{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nexport default {\n  name: 'GameDetail',\n  data() {\n    return {\n      baseUrl: 'http://localhost:8080',\n      result: [],\n      game: {\n        id: '',\n        nome: '',\n        preco: '',\n        data_de_lancamento: '',\n        categoria: '',\n        description: ''\n      }\n    };\n  },\n  mounted() {\n    // Extrai o id do parâmetro da URL usando a biblioteca `vue-router`\n    const gameId = this.$route.params.id;\n    if (gameId) {\n      this.getGame(gameId);\n    }\n  },\n  methods: {\n    cloneGame(game) {\n      return JSON.parse(JSON.stringify(game));\n    },\n    async getGameList() {\n      try {\n        const response = await fetch('http://localhost:8080/games');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        this.result = data;\n        this.originalList = data.map(p => ({\n          ...p\n        }));\n      } catch (error) {\n        alert('Error loading games!');\n        console.error(error);\n      }\n    },\n    save() {\n      if (this.game.id) {\n        this.updateGame();\n      } else {\n        this.saveGame();\n      }\n    },\n    saveGame() {\n      const formData = new FormData();\n      formData.append('nome', this.game.nome);\n      formData.append('categoria', this.game.categoria);\n      formData.append('preco', parseFloat(this.game.preco));\n      formData.append('releasedate', this.game.data_de_lancamento);\n      formData.append('description', this.game.description);\n      fetch('http://localhost:8080/games', {\n        method: 'POST',\n        body: formData\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(() => {\n        alert('Game saved successfully!');\n        router.push('/games');\n      }).catch(error => {\n        alert('Error saving game!');\n        console.error(error);\n      });\n    },\n    updateGame() {\n      const oldGame = this.originalList.find(p => p.id === this.game.id);\n      const formData = new FormData();\n      const updatedFields = {};\n      if (this.game.nome !== oldGame.nome) {\n        formData.append('nome', this.game.nome);\n        updatedFields.nome = this.game.nome;\n      }\n      if (this.game.categoria !== oldGame.categoria) {\n        formData.append('categoria', this.game.categoria);\n        updatedFields.categoria = this.game.categoria;\n      }\n      if (this.game.preco !== oldGame.preco) {\n        formData.append('preco', this.game.preco);\n        updatedFields.preco = parseFloat(this.game.preco);\n      }\n      if (this.game.data_de_lancamento !== oldGame.data_de_lancamento) {\n        formData.append('releasedate', this.game.data_de_lancamento);\n        updatedFields.categoria = this.game.categoria;\n      }\n      if (this.game.description !== oldGame.description) {\n        formData.append('description', this.game.description);\n        updatedFields.description = this.game.description;\n      }\n      const index = this.result.findIndex(game => game.id === this.game.id);\n      if (index !== -1) {\n        const updatedgame = {\n          ...this.result[index]\n        };\n        updatedgame.nome = updatedFields.nome || updatedgame.nome;\n        updatedgame.categoria = updatedFields.categoria || updatedgame.categoria;\n        updatedgame.preco = updatedFields.preco || updatedgame.preco;\n        updatedgame.data_de_lancamento = updatedFields.data_de_lancamento || updatedgame.data_de_lancamento;\n        updatedgame.description = updatedFields.description || updatedgame.description;\n        this.result.splice(index, 1, updatedgame);\n      }\n      fetch(`http://localhost:8080/games/${oldGame.id}`, {\n        method: 'PATCH',\n        body: formData\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(() => {\n        alert('Game updated successfully!');\n        const index = this.result.findIndex(p => p.id === this.game.id);\n        if (index !== -1) {\n          const updatedGame = {\n            ...this.result[index],\n            ...updatedFields\n          };\n          this.$set(this.result, index, updatedGame);\n        }\n        router.push('/games');\n      }).catch(error => {\n        alert('Error updating game!');\n        console.log(error);\n      });\n    },\n    editGame(game) {\n      this.game = this.cloneProduct(game);\n      this.categoria = this.game.categoria;\n    },\n    getGame(gameId) {\n      fetch(`http://localhost:8080/games/${gameId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        this.game = {\n          id: data.id,\n          nome: data.nome,\n          categoria: data.categoria,\n          preco: data.preco,\n          data_de_lancamento: data.data_de_lancamento,\n          description: data.description\n        };\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    resetForm() {\n      this.game = {\n        id: '',\n        nome: '',\n        categoria: '',\n        preco: '',\n        description: ''\n      };\n    },\n    submitForm() {\n      if (this.game.id) {\n        this.updateGame();\n      } else {\n        this.saveGame();\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","name","data","baseUrl","result","game","id","nome","preco","data_de_lancamento","categoria","description","mounted","gameId","$route","params","getGame","methods","cloneGame","JSON","parse","stringify","getGameList","response","fetch","ok","Error","status","json","originalList","map","p","error","alert","console","save","updateGame","saveGame","formData","FormData","append","parseFloat","method","body","then","push","catch","oldGame","find","updatedFields","index","findIndex","updatedgame","splice","updatedGame","$set","log","editGame","cloneProduct","resetForm","submitForm"],"sources":["C:\\Users\\Arthur\\gamestore\\src\\components\\GameDetail.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"save\" class=\"m-5\">\r\n            <h2 class=\"mt-2\">Game Registration</h2>\r\n            <div class=\"form-group\">\r\n                <input id=\"formName\" type=\"text\" v-model=\"game.nome\" class=\"form-control\" placeholder=\"Game name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"formCategory\" type=\"text\" v-model=\"game.categoria\" class=\"form-control\"\r\n                    placeholder=\"Game category\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"formPrice\" type=\"number\" step=\".01\" v-model=\"game.preco\" class=\"form-control\" placeholder=\"0.0\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"formReleaseDate\" type=\"date\" v-model=\"game.data_de_lancamento\" class=\"form-control\"\r\n                    placeholder=\"Release Date\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"formDescription\" type=\"text\" v-model=\"game.description\" class=\"form-control\"\r\n                    placeholder=\"Game description\">\r\n            </div>\r\n            <div class=\"mt-3 mb-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport router from '../router'\r\n\r\nexport default {\r\n    name: 'GameDetail',\r\n    data() {\r\n        return {\r\n            baseUrl: 'http://localhost:8080',\r\n\r\n            result: [],\r\n\r\n            game: { \r\n                id: '',\r\n                nome: '',\r\n                preco: '',\r\n                data_de_lancamento: '',\r\n                categoria: '',\r\n                description: '',\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        // Extrai o id do parâmetro da URL usando a biblioteca `vue-router`\r\n        const gameId = this.$route.params.id\r\n        if (gameId) {\r\n            this.getGame(gameId)\r\n        }\r\n    },\r\n    methods: {\r\n        cloneGame(game) {\r\n            return JSON.parse(JSON.stringify(game))\r\n        },\r\n        async getGameList() {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/games');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                this.result = data;\r\n                this.originalList = data.map(p => ({ ...p }));\r\n            } catch (error) {\r\n                alert('Error loading games!');\r\n                console.error(error);\r\n            }\r\n        },\r\n        save() {\r\n            if (this.game.id) {\r\n                this.updateGame()\r\n            } else {\r\n                this.saveGame()\r\n            }\r\n        },\r\n        saveGame() {\r\n            const formData = new FormData();\r\n            formData.append('nome', this.game.nome);\r\n            formData.append('categoria', this.game.categoria);\r\n            formData.append('preco', parseFloat(this.game.preco));\r\n            formData.append('releasedate', this.game.data_de_lancamento);\r\n            formData.append('description', this.game.description);\r\n\r\n            fetch('http://localhost:8080/games', {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n                .then((response) => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! Status: ${response.status}`);\r\n                    }\r\n\r\n                    return response.json();\r\n                })\r\n                .then(() => {\r\n                    alert('Game saved successfully!');\r\n                    router.push('/games');\r\n                })\r\n                .catch((error) => {\r\n                    alert('Error saving game!');\r\n                    console.error(error);\r\n                });\r\n        },\r\n        updateGame() {\r\n            const oldGame = this.originalList.find(p => p.id === this.game.id)\r\n            const formData = new FormData()\r\n            const updatedFields = {}\r\n\r\n            if (this.game.nome !== oldGame.nome) {\r\n                formData.append('nome', this.game.nome)\r\n                updatedFields.nome = this.game.nome\r\n            }\r\n\r\n            if (this.game.categoria !== oldGame.categoria) {\r\n                formData.append('categoria', this.game.categoria)\r\n                updatedFields.categoria = this.game.categoria\r\n            }\r\n\r\n            if (this.game.preco !== oldGame.preco) {\r\n                formData.append('preco', this.game.preco)\r\n                updatedFields.preco = parseFloat(this.game.preco)\r\n            }\r\n\r\n            if (this.game.data_de_lancamento !== oldGame.data_de_lancamento) {\r\n                formData.append('releasedate', this.game.data_de_lancamento)\r\n                updatedFields.categoria = this.game.categoria\r\n            }\r\n\r\n            if (this.game.description !== oldGame.description) {\r\n                formData.append('description', this.game.description)\r\n                updatedFields.description = this.game.description\r\n            }\r\n\r\n            const index = this.result.findIndex((game) => game.id === this.game.id)\r\n            if (index !== -1) {\r\n                const updatedgame = { ...this.result[index] }\r\n                updatedgame.nome = updatedFields.nome || updatedgame.nome\r\n                updatedgame.categoria = updatedFields.categoria || updatedgame.categoria\r\n                updatedgame.preco = updatedFields.preco || updatedgame.preco\r\n                updatedgame.data_de_lancamento = updatedFields.data_de_lancamento || updatedgame.data_de_lancamento\r\n                updatedgame.description = updatedFields.description || updatedgame.description\r\n\r\n                this.result.splice(index, 1, updatedgame)\r\n            }\r\n\r\n            fetch(`http://localhost:8080/games/${oldGame.id}`, {\r\n                method: 'PATCH',\r\n                body: formData,\r\n            })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! Status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(() => {\r\n                    alert('Game updated successfully!');\r\n                    const index = this.result.findIndex(p => p.id === this.game.id);\r\n                    if (index !== -1) {\r\n                        const updatedGame = { ...this.result[index], ...updatedFields };\r\n                        this.$set(this.result, index, updatedGame);\r\n                    }\r\n                    router.push('/games');\r\n                })\r\n                .catch((error) => {\r\n                    alert('Error updating game!')\r\n                    console.log(error)\r\n                })\r\n        },\r\n        editGame(game) {\r\n            this.game = this.cloneProduct(game)\r\n            this.categoria = this.game.categoria\r\n        },\r\n        getGame(gameId) {\r\n            \r\n            fetch(`http://localhost:8080/games/${gameId}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! Status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    \r\n                    this.game= {\r\n                        id: data.id,\r\n                        nome: data.nome,\r\n                        categoria: data.categoria,\r\n                        preco: data.preco,\r\n                        data_de_lancamento: data.data_de_lancamento,\r\n                        description: data.description,\r\n                    };\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        }, resetForm() {\r\n            this.game = {\r\n                id: '',\r\n                nome: '',\r\n                categoria: '',\r\n                preco: '',\r\n                description: ''      \r\n            }\r\n        },\r\n        submitForm() {\r\n            if (this.game.id) {\r\n                this.updateGame()\r\n            } else {\r\n                this.saveGame()\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}