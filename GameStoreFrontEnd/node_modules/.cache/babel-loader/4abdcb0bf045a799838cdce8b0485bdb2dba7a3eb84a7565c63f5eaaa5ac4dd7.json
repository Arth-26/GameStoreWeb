{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nexport default {\n  data() {\n    return {\n      gameId: null,\n      game: null\n    };\n  },\n  mounted() {\n    this.gameId = this.$route.params.id;\n\n    // Obtenha os dados do jogo com base no ID\n    this.getGame(this.gameId);\n  },\n  methods: {\n    async getGame() {\n      try {\n        // Substitua com lógica para carregar dados do jogo pelo ID\n        const response = await fetc(`/games/${this.gameId}`);\n        this.game = response.data;\n      } catch (error) {\n        console.error('Erro ao carregar dados do jogo:', error);\n      }\n    },\n    async updateGame() {\n      try {\n        const response = await fetch(`http://localhost:8080/games/4`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: this.game.nome,\n            categoria: this.game.categoria,\n            preco: this.game.preco,\n            data_de_lancamento: this.game.data_de_lancamento,\n            description: this.game.description\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        alert('Game updated!');\n        router.push('/games');\n      } catch (error) {\n        alert('Error updating game!');\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","data","gameId","game","mounted","$route","params","id","getGame","methods","response","fetc","error","console","updateGame","fetch","method","headers","body","JSON","stringify","nome","categoria","preco","data_de_lancamento","description","ok","Error","status","alert","push"],"sources":["C:\\Users\\Arthur\\gamestore\\src\\components\\UpdateGame.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Update Game</h2>\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{{ game.nome }}</h5>\r\n                <p>{{ game.categoria }}</p>\r\n                <p>Preço: {{ game.preco }}</p>\r\n                <p class=\"card-text\">{{ game.description }}</p>\r\n            </div>\r\n        </div>\r\n\r\n        <form @submit.prevent=\"updateGame\" class=\"m-5\">\r\n            <h2 class=\"mt-2\">Game Registration</h2>\r\n            <div class=\"form-group\">\r\n                <input id=\"nome\" type=\"text\" v-model=\"game.nome\" class=\"form-control\" placeholder=\"Game name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"categoria\" type=\"text\" v-model=\"game.categoria\" class=\"form-control\" placeholder=\"Game category\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"preco\" type=\"number\" step=\".01\" v-model=\"game.preco\" class=\"form-control\" placeholder=\"0.0\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"data_de_lancamento\" type=\"date\" v-model=\"game.data_de_lancamento\" class=\"form-control\"\r\n                    placeholder=\"Release Date\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"description\" type=\"text\" v-model=\"game.description\" class=\"form-control\"\r\n                    placeholder=\"Game description\">\r\n            </div>\r\n            <div class=\"mt-3 mb-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport router from '../router';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            gameId: null,\r\n            game: null,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.gameId = this.$route.params.id;\r\n\r\n        // Obtenha os dados do jogo com base no ID\r\n        this.getGame(this.gameId);\r\n    },\r\n    methods: {\r\n        async getGame() {\r\n            try {\r\n                // Substitua com lógica para carregar dados do jogo pelo ID\r\n                const response = await fetc(`/games/${this.gameId}`);\r\n                this.game = response.data;\r\n            } catch (error) {\r\n                console.error('Erro ao carregar dados do jogo:', error);\r\n            }\r\n        },\r\n        async updateGame() {\r\n            try {\r\n                const response = await fetch(`http://localhost:8080/games/4`, {\r\n                    method: 'PATCH',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        nome: this.game.nome,\r\n                        categoria: this.game.categoria,\r\n                        preco: this.game.preco,\r\n                        data_de_lancamento: this.game.data_de_lancamento,\r\n                        description: this.game.description,\r\n                    }),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n\r\n                alert('Game updated!');\r\n                router.push('/games');\r\n            } catch (error) {\r\n                alert('Error updating game!');\r\n                console.error(error);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>"],"mappings":";AAuCA,OAAOA,MAAK,MAAO,WAAW;AAE9B,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;IACV,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACF,MAAK,GAAI,IAAI,CAACG,MAAM,CAACC,MAAM,CAACC,EAAE;;IAEnC;IACA,IAAI,CAACC,OAAO,CAAC,IAAI,CAACN,MAAM,CAAC;EAC7B,CAAC;EACDO,OAAO,EAAE;IACL,MAAMD,OAAOA,CAAA,EAAG;MACZ,IAAI;QACA;QACA,MAAME,QAAO,GAAI,MAAMC,IAAI,CAAE,UAAS,IAAI,CAACT,MAAO,EAAC,CAAC;QACpD,IAAI,CAACC,IAAG,GAAIO,QAAQ,CAACT,IAAI;MAC7B,EAAE,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACf,IAAI;QACA,MAAMJ,QAAO,GAAI,MAAMK,KAAK,CAAE,+BAA8B,EAAE;UAC1DC,MAAM,EAAE,OAAO;UACfC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBC,IAAI,EAAE,IAAI,CAAClB,IAAI,CAACkB,IAAI;YACpBC,SAAS,EAAE,IAAI,CAACnB,IAAI,CAACmB,SAAS;YAC9BC,KAAK,EAAE,IAAI,CAACpB,IAAI,CAACoB,KAAK;YACtBC,kBAAkB,EAAE,IAAI,CAACrB,IAAI,CAACqB,kBAAkB;YAChDC,WAAW,EAAE,IAAI,CAACtB,IAAI,CAACsB;UAC3B,CAAC;QACL,CAAC,CAAC;QAEF,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBjB,QAAQ,CAACkB,MAAO,EAAC,CAAC;QAC7D;QAEAC,KAAK,CAAC,eAAe,CAAC;QACtB7B,MAAM,CAAC8B,IAAI,CAAC,QAAQ,CAAC;MACzB,EAAE,OAAOlB,KAAK,EAAE;QACZiB,KAAK,CAAC,sBAAsB,CAAC;QAC7BhB,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}