{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nexport default {\n  name: 'NewGame',\n  data() {\n    return {\n      baseUrl: 'http://localhost:8080',\n      result: [],\n      game: {\n        id: '',\n        nome: '',\n        preco: '',\n        data_de_lancamento: '',\n        categoria: '',\n        description: ''\n      }\n    };\n  },\n  methods: {\n    cloneGame(game) {\n      return JSON.parse(JSON.stringify(game));\n    },\n    async getGameList() {\n      try {\n        const response = await fetch('http://localhost:8080/games');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        this.result = data;\n        this.originalList = data.map(p => ({\n          ...p\n        }));\n      } catch (error) {\n        alert('Error loading games!');\n        console.error(error);\n      }\n    },\n    async saveGame() {\n      try {\n        const response = await fetch('http://localhost:8080/games', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nome: this.nome,\n            categoria: this.categoria,\n            preco: this.preco,\n            data_de_lancamento: this.data_de_lancamento,\n            description: this.description\n          })\n        });\n        if (response.status === 200) {\n          alert('Games saved successfully!');\n          router.push('/games');\n        } else {\n          console.error('Credenciais inválidas.');\n        }\n      } catch (error) {\n        console.error('Erro ao realizar login:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["router","name","data","baseUrl","result","game","id","nome","preco","data_de_lancamento","categoria","description","methods","cloneGame","JSON","parse","stringify","getGameList","response","fetch","ok","Error","status","json","originalList","map","p","error","alert","console","saveGame","method","headers","body","push"],"sources":["C:\\Users\\Arthur\\gamestore\\src\\components\\NewGame.vue"],"sourcesContent":["<template>\r\n    <body>\r\n        \r\n    </body>\r\n    <div>\r\n        <form @submit.prevent=\"saveGame\" class=\"m-5\">\r\n            <h2 class=\"mt-2\">Game Registration</h2>\r\n            <div class=\"form-group\">\r\n                <input id=\"nome\" type=\"text\" v-model=\"nome\" class=\"form-control\" placeholder=\"Game name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"categoria\" type=\"text\" v-model=\"categoria\" class=\"form-control\"\r\n                    placeholder=\"Game category\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"preco\" type=\"number\" step=\".01\" v-model=\"preco\" class=\"form-control\" placeholder=\"0.0\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"data_de_lancamento\" type=\"date\" v-model=\"data_de_lancamento\" class=\"form-control\"\r\n                    placeholder=\"Release Date\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input id=\"description\" type=\"text\" v-model=\"description\" class=\"form-control\"\r\n                    placeholder=\"Game description\">\r\n            </div>\r\n            <div class=\"mt-3 mb-3\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport router from '../router'\r\n\r\nexport default {\r\n    name: 'NewGame',\r\n    data() {\r\n        return {\r\n            baseUrl: 'http://localhost:8080',\r\n\r\n            result: [],\r\n\r\n            game: { \r\n                id: '',\r\n                nome: '',\r\n                preco: '',\r\n                data_de_lancamento: '',\r\n                categoria: '',\r\n                description: '',\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        cloneGame(game) {\r\n            return JSON.parse(JSON.stringify(game))\r\n        },\r\n        async getGameList() {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/games');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n\r\n                const data = await response.json();\r\n                this.result = data;\r\n                this.originalList = data.map(p => ({ ...p }));\r\n            } catch (error) {\r\n                alert('Error loading games!');\r\n                console.error(error);\r\n            }\r\n        },\r\n        async saveGame() {\r\n            try {\r\n                const response = await fetch('http://localhost:8080/games', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        nome: this.nome,\r\n                        categoria: this.categoria,\r\n                        preco: this.preco,\r\n                        data_de_lancamento: this.data_de_lancamento,\r\n                        description: this.description\r\n                        \r\n                    })\r\n                })\r\n                if (response.status === 200) {\r\n                    alert('Games saved successfully!')\r\n                    router.push('/games');\r\n                } else {\r\n                    console.error('Credenciais inválidas.');\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.error('Erro ao realizar login:', error);\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n</style>"],"mappings":";AAkCA,OAAOA,MAAK,MAAO,WAAU;AAE7B,eAAe;EACXC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,uBAAuB;MAEhCC,MAAM,EAAE,EAAE;MAEVC,IAAI,EAAE;QACFC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,kBAAkB,EAAE,EAAE;QACtBC,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE;MACjB;IACJ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,SAASA,CAACR,IAAI,EAAE;MACZ,OAAOS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACX,IAAI,CAAC;IAC1C,CAAC;IACD,MAAMY,WAAWA,CAAA,EAAG;MAChB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC7D;QAEA,MAAMpB,IAAG,GAAI,MAAMgB,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAI,CAACnB,MAAK,GAAIF,IAAI;QAClB,IAAI,CAACsB,YAAW,GAAItB,IAAI,CAACuB,GAAG,CAACC,CAAA,KAAM;UAAE,GAAGA;QAAE,CAAC,CAAC,CAAC;MACjD,EAAE,OAAOC,KAAK,EAAE;QACZC,KAAK,CAAC,sBAAsB,CAAC;QAC7BC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACD,MAAMG,QAAQA,CAAA,EAAG;MACb,IAAI;QACA,MAAMZ,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UACxDY,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEnB,IAAI,CAACE,SAAS,CAAC;YACjBT,IAAI,EAAE,IAAI,CAACA,IAAI;YACfG,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBF,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB;YAC3CE,WAAW,EAAE,IAAI,CAACA;UAEtB,CAAC;QACL,CAAC;QACD,IAAIO,QAAQ,CAACI,MAAK,KAAM,GAAG,EAAE;UACzBM,KAAK,CAAC,2BAA2B;UACjC5B,MAAM,CAACkC,IAAI,CAAC,QAAQ,CAAC;QACzB,OAAO;UACHL,OAAO,CAACF,KAAK,CAAC,wBAAwB,CAAC;QAC3C;MACJ,EACA,OAAOA,KAAK,EAAE;QACVE,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}